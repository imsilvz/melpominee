name: Melpominee.app Deployment
on:
  push:
    branches:
      - master

    # Publish `v1.2.3` tags as releases.
    tags:
      - v*

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

permissions:
  actions: read
  contents: read
  packages: write
  id-token: write

jobs:
  docker-build-push:
    name: Melpominee.app Build & Push
    runs-on: melpominee-runner
    
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Authenticate with Container Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Backend
        id: meta-backend
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-backend

      - name: Extract metadata (tags, labels) for Frontend
        id: meta-frontend
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-frontend

      - name: Build & Push Backend
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          file: ./backend/Dockerfile
          tags: ${{ steps.meta-backend.outputs.tags }}
          labels: ${{ steps.meta-backend.outputs.labels }}
          
      - name: Build & Push Frontend
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          file: ./frontend/Dockerfile
          tags: ${{ steps.meta-frontend.outputs.tags }}
          labels: ${{ steps.meta-frontend.outputs.labels }}

      - name: Setup Azure CLI
        run: |
          curl -sL https://aka.ms/InstallAzureCLIDeb | bash
        
      - name: Azure Login
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - uses: azure/setup-kubectl@v4
        id: install

      - name: Gets K8s context
        uses: azure/aks-set-context@v4
        with:
            resource-group: ${{ vars.AZURE_GROUP }}
            cluster-name: ${{ vars.AZURE_CLUSTER }}
        id: login

      - name: Deploy Manifests
        uses: Azure/k8s-deploy@v5
        with:
          action: 'deploy'
          manifests: |
            manifests/deploy.yaml
            manifests/ingress.yaml
          namespace: 'melpominee'

      - name: Rollout Restart
        run: |
          kubectl rollout restart deployment melpominee-frontend --namespace=melpominee
          kubectl rollout restart deployment melpominee-backend --namespace=melpominee